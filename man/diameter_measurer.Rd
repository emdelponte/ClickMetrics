% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diameter_measurer.R
\name{diameter_measurer}
\alias{diameter_measurer}
\title{Shiny dashboard to measure length between click pairs}
\usage{
diameter_measurer(files, labels = "Plate",
  obs = "Done with ClickMetrics", csv = "my_clicks.csv",
  width = "800px", height = "800px", app_path = NULL)
}
\arguments{
\item{files}{\code{character[>0]} Path to images that will be loaded
by \code{\link[imager]{load.image}()}.}

\item{labels}{\code{character[>0]} Names that represent treatments
for the case when phots are from an experiments.}

\item{obs}{\code{character[1]} Any name used to identify the records,
e.g. the user that made the clicks.}

\item{csv}{\code{character[1]} Path to save a csv with recorded
clicks. If \code{NULL}, the file is written in a temporary
directory.}

\item{width}{\code{character[1]} Value passad as argumento to
\code{width} parameter of \code{\link[shiny]{plotOutput}()}
function.}

\item{height}{\code{character[1]} Value passad as argumento to
\code{height} parameter of \code{\link[shiny]{plotOutput}()}
function.}

\item{app_path}{\code{character[1]} (optional, default is
\code{NULL}) A path for shiny application is case of
improving/developing the existing one.}
}
\value{
The function creates a CSV file with recorded clicks. After
    pressing \emph{Exit} button, a \code{data.frame} is returned. It
    contains all click coordinates.
}
\description{
This function launch a \pkg{shiny} application in
    browser to measure the distance between a pair of clicks. See
    section Details for usage of the application.
}
\details{
\describe{

\item{Sidebar panel}{Contains widgets to user interact with.}

\item{Main panel}{Shows the image and a table with clicks already
    done. Each click adds a dot on the plot. A pair of consective
    cliks are linked by a line segment.}

\item{\emph{Image} dropdown list}{Selects the image to be measured. A
    column named \code{image} in the returned \code{data.frame} will
    contain this information.}

\item{\emph{Component} radio buttons}{Selects the treament, condition
    or component associated with the clicks. A column named
    \code{component} in the returned \code{data.frame} will contain
    this information. \strong{Note}: double click in the image cycles
    among itens, so, a double click move to the next component in the
    list.}

\item{\emph{Observation} text input}{A text field used to inform
    anything, like the user name (a global information), or the color
    of the mycelium, the growth temperature (local
    information). \strong{Note}: this information must be filled
    before the clicks. A column named \code{obs} in the returned
    \code{data.frame} will contain this information.}

\item{\emph{Record clicks} button}{It triggers \code{write.csv()} to
    save clicks in disc. The button should be pressed after all
    clicks have been made. A column named \code{ts} in the returned
    \code{data.frame} will contain the time stamp of the recorded
    data.}

\item{\emph{Undo} button}{Undoes the last click.}

\item{\emph{Restore} button}{Clean all clicks.}

\item{\emph{Exit} button}{Stops the application.}

}
}
\examples{

\dontrun{

files <- dir(path = system.file("images", package = "ClickMetrics"),
             pattern = "^petri.*\\\\.png$",
             full.names = TRUE)
files

tb <- diameter_measurer(files = files,
                        labels = c("Plate", "Trat1", "Trat2"),
                        obs = "Done with ClickMetrics",
                        csv = "my_clicks.csv")
str(tb)

with(tb, by(cbind(x, y),
            INDICES = pair,
            FUN = dist))

}

}
\author{
Walmes Zeviani.
}
